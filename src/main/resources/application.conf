kafka {
  port = 9092
  host = "localhost"
  schema.registry.url = "http://localhost:8081"
}

akka {

  loglevel = "DEBUG"
  stdout-loglevel = "ERROR"

  kafka.consumer {
    kafka-clients {
      bootstrap.servers = ""${kafka.host}":"${kafka.port}""
      key.deserializer = "org.apache.kafka.common.serialization.StringDeserializer"
      value.deserializer = "org.apache.kafka.common.serialization.StringDeserializer"
      group.id = "group-a"
      enable.auto.commit = false
      auto.offset.reset = "earliest"
      fetch.max.bytes = 100111333
    }
  }

  kafka.producer {
    parallelism = 1000
    kafka-clients {
      bootstrap.servers = ""${kafka.host}":"${kafka.port}""
      key.serializer = "io.confluent.kafka.serializers.KafkaAvroSerializer"
      value.serializer = "io.confluent.kafka.serializers.KafkaAvroSerializer"
      schema.registry.url = ""${kafka.schema.registry.url}""
      compression.type = "lz4"
      batch.size = 8096
      linger.ms = 100
      acks = "all"
      retries = 5
      max.in.flight.requests.per.connection = 1
    }
  }

  kafka.committer {
    max-batch = 2000
    max-interval = 10s
    parallelism = 2
  }

  coordinated-shutdown {
    phases {
      service-requests-done {
        depends-on = [service-unbind]
      }
    }
    default-phase-timeout = 30s
  }

}
